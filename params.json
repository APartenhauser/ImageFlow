{"name":"Imageflow","tagline":"A simple wrapper of TensorFlow for Image I/O in pure tensor flow format","body":"# ImageFlow\r\nA simple wrapper of TensorFlow for Image I/O in pure tensor flow format\r\n\r\nYou can read all PNG and JPG/JPEG images in a directory with TensorFlow buil-in functions to boost speed.\r\nSupported formats by TensorFlow are: PNG, JPG/JPEG\r\n\r\nCurrently it reads all PNG/JPG/JPEG images in a directory, the way most of the machine learning problems organized.\r\n\r\nReturn: A Tensor (numpy array) of object of type uint8. 3-D with shape [height, width, channels]\r\n\r\nUsage:\r\n  Include the file in your project.\r\n  ```python\r\n    image_list = read_images(path_to_dir) # 'path to the directory of your training images, JPG/PNG only\r\n  ```\r\nIf you want to visualize it:\r\n  ```python\r\n    PIL.Image.show(Image.fromarray(image_list[0])) # You can use any library to show it, PIL, CV2, ...\r\n  ```\r\nIf you don't want to use additional file in your project and just want to know how to import an image with TensorFlow:\r\n```python\r\n    filename_queue = tf.train.string_input_producer(['/Users/HANEL/Desktop/tf.png']) #  list of files to read\r\n  \r\n    reader = tf.WholeFileReader()\r\n    key, value = reader.read(filename_queue)\r\n  \r\n    my_img = tf.image.decode_png(value) # use png or jpg decoder based on your files.\r\n  \r\n    init_op = tf.initialize_all_variables()\r\n    with tf.Session() as sess:\r\n      sess.run(init_op)\r\n\r\n    # Start populating the filename queue.\r\n    \r\n    coord = tf.train.Coordinator()\r\n    threads = tf.train.start_queue_runners(coord=coord)\r\n\r\n    for i in range(1): #length of your filename list\r\n      image = my_img.eval() #here is your image Tensor :) \r\n\r\n    print(image.shape)\r\n    Image.show(Image.fromarray(np.asarray(image)))\r\n    \r\n    coord.request_stop()\r\n    coord.join(threads)\r\n  ```\r\n\r\nDependencies:\r\n\r\n* TensorFlow\r\n* Numpy\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}