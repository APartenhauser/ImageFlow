{"name":"ImageFlow","tagline":"A simple wrapper of TensorFlow for Converting, Importing (and Soon, Training) Images in tensorflow.","body":"# ImageFlow\r\nA simple wrapper of TensorFlow for Converting, Importing (and Soon, Training) Images in tensorflow.\r\n\r\nInstallation:\r\n```\r\npip install imageflow\r\n```\r\n\r\nUsage:\r\n\r\n```python\r\nimport imageflow\r\n```\r\n\r\n#### Convert a directory of images and their labels to `.tfrecords`\r\nJust calling the following function will make a `filename.tfrecords` file in the directory `converted_data` in your projects root(where you call this method).\r\n\r\n```python\r\nconvert_images(images, labels, filename)\r\n```\r\n\r\nThe `images` should be an array of shape `[-1, height, width, channel]` and has the same rows as the `labels`\r\n\r\n#### Read distorted and normal dta from `.tfrecords` in multi-thread manner:\r\n```python\r\n# Distorted images for training\r\nimages, labels = distorted_inputs(filename='../my_data_raw/train.tfrecords', batch_size=FLAGS.batch_size,\r\n                                      num_epochs=FLAGS.num_epochs,\r\n                                      num_threads=5, imshape=[32, 32, 3], imsize=32)\r\n\r\n# Normal images for validation\r\nval_images, val_labels = inputs(filename='../my_data_raw/validation.tfrecords', batch_size=FLAGS.batch_size,\r\n                                    num_epochs=FLAGS.num_epochs,\r\n                                    num_threads=5, imshape=[32, 32, 3])\r\n```\r\n\r\n\r\nDependencies:\r\n\r\n* TensorFlow\r\n* Numpy\r\n* Pillow\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}